double result;

double y0;
double y1;
double y2;
double x0;
double x1;
double x2;

void init() {
    y0 = 0.0;
    y1 = 0.0;
    y2 = 0.0;
    x0 = 0.0;
    x1 = 0.0;
    x2 = 0.0;
}

void exec(in control freq, in sample signal, out sample result) {
    double freq2 = clamp(-1.0, 0.65, freq);
    double w = 2*M_PI*signal_to_frequency(freq2);

    double r0 = 0.5*dt*w;
    const double r1 = sqrt(2.0);
    double r2 = sin(r0);
    double r3 = cos(r0);
    double r4 = 1.0/r3;
    double r5 = r2*r4;
    double r7 = r1*r2*r3;
    double r8 = 1.0/(1.0+r7);
    double r9 = 2.0*r3*r3;
    double r10 = r9-r3;

    double a1 = -2.0*r10*r8;
    double a2 = (1.0-r7)*r8;

    double b0 = 1/(r1*r5+r4*r4);
    double b1 = -r9*r8;
    double b2 = b0;

    x0 = signal;
    y0 = -a1*y1-a2*y2+b0*x0+b1*x1+b2*x2;
    result = y0;
    y2 = y1;
    y1 = y0;
    x2 = x1;
    x1 = x0;
}
